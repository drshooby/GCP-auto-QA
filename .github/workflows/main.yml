name: QA Auto Runner

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:

jobs:
  qa:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: "actions/checkout@v4"

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          project_id: "automated-qa-runner"
          workload_identity_provider: ${{ secrets.WI_PROVIDER }}
          service_account: "cicd-github@automated-qa-runner.iam.gserviceaccount.com"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      # artifact registry currently exists with an image so we will skip for now

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Run Terraform
        env:
          TF_VAR_project_id: "automated-qa-runner"
          TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          cd terraform/step-2-app
          terraform init -input=false
          terraform validate
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

      - name: Run Cloud Run Job
        run: |
          EXECUTION_NAME=$(gcloud run jobs execute qa-test-runner \
            --region us-west1 \
            --project automated-qa-runner \
            --format="value(metadata.name)")

          echo "Started execution: $EXECUTION_NAME"

          # Poll for up to 2 minutes
          TIMEOUT=120
          ELAPSED=0

          while [[ $ELAPSED -lt $TIMEOUT ]]; do
            STATUS=$(gcloud run jobs executions describe "$EXECUTION_NAME" \
              --region us-west1 \
              --project automated-qa-runner \
              --format="value(status.conditions[?(@.type=='Completed')].status)")

            if [[ "$STATUS" == "True" ]]; then
              echo "Execution completed successfully."
              break
            elif [[ "$STATUS" == "False" ]]; then
              echo "Execution failed."
              exit 1
            else
              echo "Execution still running... waiting 10 seconds."
              sleep 10
              ((ELAPSED+=10))
            fi
          done

          if [[ $ELAPSED -ge $TIMEOUT ]]; then
            echo "Execution timed out after 2 minutes"
            exit 1
          fi

      - name: Terraform Destroy QA Infra
        if: always()
        env:
          TF_VAR_project_id: "automated-qa-runner"
          TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          cd terraform/step-2-app
          terraform init -input=false
          terraform destroy -auto-approve
